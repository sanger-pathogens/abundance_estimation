params {
    queue_size = 50
    submit_rate_limit = '50/2min'
    results_dir = "./nextflow_results"
    manifest = ""
    index_cache= "/data/pam/team230/ol6/scratch/team162_pipelines/index_cache"
    genome_dir = "/data/pam/team162/shared/gtdb_genomes_reps_r207/gtdb_genomes_reps_r207_genome_dir"
    btidx = "/lustre/scratch125/pam/pathogen/pathpipe/gtdb/gtdb_genomes_reps_r207/gtdb_genomes_reps_r207.fasta.bt2"
    genome_file = "/lustre/scratch125/pam/pathogen/pathpipe/gtdb/gtdb_genomes_reps_r207/gtdb_genomes_reps_r207.fasta"
    stb_file = "/lustre/scratch125/pam/pathogen/pathpipe/gtdb/gtdb_genomes_reps_r207/gtdb_genomes_reps_r207.stb"
    instrain_header_file = "/data/pam/team230/ol6/scratch/team162_pipelines/sourmash_test/abundance_estimation/instrain_header.tsv"
    sourmash_taxonomy_file = "/data/pam/team230/ol6/scratch/team162_pipelines/sourmash_test/abundance_estimation/gtdb_genome_reps_taxonomy.csv"
    bowtie2_samtools_threads = 4
    instrain_threads = 4
    instrain_full_output = false
    skip_qc = false
    keep_metawrap_qc = false
    keep_bowtie2samtools = false
    keep_instrain = false
    instrain_queue = "normal"
    instrain_quick_profile = false
    bowtie2_samtools_only = false
    help = false
}


profiles {

    standard {
        docker {
            enabled = true
        }
    }

    // Sanger local configuration for testing
    sanger_local {

        docker {
            enabled = false
        }

        singularity {
            enabled = true
            autoMounts = true
            cacheDir = "$PWD"
            runOptions = "--bind /lustre,/nfs,/software,/data"
        }

        process {
            errorStrategy = {task.attempt <= 2 ? "retry" : "terminate"}
            maxRetries = 1
            executor = "local"
        }
    }

    // Basic configuration for Nextflow LSF management on the Sanger farm.
    sanger_lsf {

        docker {
            enabled = false
        }

        singularity {
            enabled = true
            autoMounts = true
            cacheDir = "$PWD"
            runOptions = "--bind /lustre,/nfs,/software,/data"
        }

        process {
            cpus = 1
            memory = "1GB"
            queue = "normal"
            errorStrategy = {task.attempt <= 2 ? "retry" : "terminate"}
            maxRetries = 1

            withName:metawrap_qc {
                cpus = 1
                queue = { task.attempt < 2 ? "normal" : "long" }
                memory = 20.GB
                executor = "lsf"
            }

            withName:SUBSET_ASSEMBLY_FILE {
                cpus = 1
                queue = "normal"
                memory = { 1.GB * task.attempt }
                executor = "lsf"
            }

            withName:SOURMASH_SKETCH {
                cpus = 1
                queue = "normal"
                memory = { 10.GB * task.attempt }
                executor = "lsf"
            }

            withName:SOURMASH_GATHER {
                cpus = 1
                queue = "normal"
                memory = { 20.GB * task.attempt }
                executor = "lsf"
            }

            withName:GUNZIP_ASSEMBLY {
                cpus = 1
                queue = { task.attempt < 2 ? "small" : "normal" }
                memory = { 1.GB * task.attempt }
                executor = "lsf"
            }

            withName:GENERATE_STB {
                cpus = 1
                queue = { task.attempt < 2 ? "small" : "normal" }
                memory = { 1.GB * task.attempt }
                executor = "lsf"
            }

            withName:BOWTIE_INDEX {
                cpus = 4
                queue = "normal"
                memory = { 40.GB * task.attempt }
                executor = "lsf"
            }

            withName:BOWTIE2SAMTOOLS {
                cpus = 4
                queue = "normal"
                memory = { 20.GB * task.attempt }
                executor = "lsf"
            }

            withName:INSTRAIN {
                cpus = 4
                memory = { 25.GB * task.attempt }
                queue = "normal"
                executor = "lsf"
                errorStrategy = { task.exitStatus == 1 ? 'ignore' : task.attempt <= 2 ? "retry" : "terminate" }
            }

            withName:COLLATE_INSTRAIN_RESULTS {
                cpus = 1
                memory = { 1.GB * task.attempt }
                queue = "normal"
                executor = "lsf"
            }
        }
        executor {
            name = "lsf"
            perJobMemLimit = true
            // Maximum number of jobs to spawn at once - adjust as necessary
            queueSize = params.queue_size
            submitRateLimit = params.submit_rate_limit
            jobName = { "meta_abundance - $task.name - $task.hash" }
            pollInterval = "5 sec"
        }
    }
}
